<% if defined?(data) || countable.count > 0 %>
  <canvas id="canvas-<%=r = SecureRandom.uuid%>"></canvas>
  <script>
    $(function() {

      Chart.register(ChartDataLabels);

      <%
        if !defined?(data)
          if !defined?(months_ago); months_ago = 12; end
        earliest = countable.min(:created_at).to_date
        d = [Date.new(earliest.year, earliest.month, 1) - 1.month]
        if earliest < months_ago.months.ago
          earliest = months_ago.months.ago
          d = [Date.new(earliest.year, earliest.month, 1)]
        end
        d << (d.last + 1.month) while d.last < Date.new(Date.today.year, Date.today.month, 1)
        end
      %>

      new Chart(document.getElementById("canvas-<%=r%>").getContext("2d"), {
      type: 'bar',
      data: {
        labels: <%== defined?(data) ? data.keys.to_json : d.map { |x| "#{Date::MONTHNAMES[x.month]} #{x.year}" }.to_json %>,
        datasets: [
          {
            label: <%== label.to_json %>,
            backgroundColor: '#00B963',
            borderColor: '#00B963',
            data: <%== defined?(data) ? data.values.to_json : d.map { |x| countable.and(:created_at.gte => x, :created_at.lt => (x + 1.month)).count }.to_json %>
          }
        ],
      },
      options: {
        plugins: {
          datalabels: {
            formatter: function(value, context) {
              return <%==(defined?(unit) ? unit : '').to_json %> + value.toLocaleString();
            },
            color: 'white',
            font: {
              weight: 'bold'
            }
          }
        },
        responsive: true,
        scales: {
          xAxes: [{
              display: true,
              scaleLabel: {
                display: true,
                labelString: 'Month'
              }
            }]
        }
      }
    });

    });
  </script>
<% end %>
