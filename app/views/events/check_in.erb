<script src="//rawcdn.githack.com/cozmo/jsQR/49a9633931fb8030ac2fc9cecc121d6e5a19f9a3/dist/jsQR.js"></script>
<%= partial :'events/nav', locals: { event: @event } %>
<div class="row justify-content-center">
  <div class="col-12 col-lg-8">
    <div id="loadingMessage">üé• Unable to access video stream (please make sure you have a webcam enabled)</div>
    <canvas style="width: 100%" id="canvas" hidden></canvas>
    <div id="output" hidden class="text-center">
      <div id="outputMessage">No QR code detected.</div>
      <div hidden><b>Ticket ID:</b>
        <span id="outputData"></span>
      </div>
    </div>
    <script>
      var video = document.createElement("video");
      var canvasElement = document.getElementById("canvas");
      var canvas = canvasElement.getContext("2d");
      var loadingMessage = document.getElementById("loadingMessage");
      var outputContainer = document.getElementById("output");
      var outputMessage = document.getElementById("outputMessage");
      var outputData = document.getElementById("outputData");

      function drawLine(begin, end, color) {
        canvas.beginPath();
        canvas.moveTo(begin.x, begin.y);
        canvas.lineTo(end.x, end.y);
        canvas.lineWidth = 4;
        canvas.strokeStyle = color;
        canvas.stroke();
      }

      // Use facingMode: environment to attemt to get the front camera on phones
      navigator.mediaDevices.getUserMedia({ video: { facingMode: "environment" } }).then(function(stream) {
        video.srcObject = stream;
        video.setAttribute("playsinline", true); // required to tell iOS safari we don't want fullscreen
        video.play();
        requestAnimationFrame(tick);
      });

      var checkingIn = false

      function checkIn(code) {
        if (!code)
          return
        checkingIn = true
        $.post('/events/<%=@event.id%>/check_in/' + code, {checked_in: true}, function(accountName, textStatus, jqXHR) {
          alert('Checked in ' + accountName + ' ' + code + ' ‚úÖ')
        }).fail(function(data, textStatus, jqXHR) {
          switch (data.status) {
          case 403:
            alert('Ticket ID not found ‚ö†Ô∏è')
            break
          case 409:
            alert('Already checked in ‚õîÔ∏è')
            break
        }
        }).always(function() {
          checkingIn = false
        })
      }

      function tick() {
        loadingMessage.innerText = "‚åõ Loading video..."
        if (video.readyState === video.HAVE_ENOUGH_DATA) {
          loadingMessage.hidden = true;
          canvasElement.hidden = false;
          outputContainer.hidden = false;

          canvasElement.height = video.videoHeight;
          canvasElement.width = video.videoWidth;
          canvas.drawImage(video, 0, 0, canvasElement.width, canvasElement.height);
          var imageData = canvas.getImageData(0, 0, canvasElement.width, canvasElement.height);
          var code = jsQR(imageData.data, imageData.width, imageData.height, {
            inversionAttempts: "dontInvert",
          });
          if (code) {
            drawLine(code.location.topLeftCorner, code.location.topRightCorner, "#FF3B58");
            drawLine(code.location.topRightCorner, code.location.bottomRightCorner, "#FF3B58");
            drawLine(code.location.bottomRightCorner, code.location.bottomLeftCorner, "#FF3B58");
            drawLine(code.location.bottomLeftCorner, code.location.topLeftCorner, "#FF3B58");
            outputMessage.hidden = true;
            outputData.parentElement.hidden = false;
            outputData.innerText = code.data;
            if (!checkingIn)
              checkIn(code.data)
          } else {
            outputMessage.hidden = false;
            outputData.parentElement.hidden = true;
          }
        }
        requestAnimationFrame(tick);
      }
    </script>
  </div>
</div>
