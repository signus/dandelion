<script>
  function toggleAdvancedSearch() {
    var searchWell = $('#search-well');
    var toggleLink = $('#toggle-search');
    var searchArrow = $('#search-arrow');

    if (searchWell.is(':visible')) {
      searchWell.hide();
      toggleLink.html('<i class="bi bi-chevron-right" id="search-arrow"></i> Show advanced search');
    } else {
      searchWell.show();
      toggleLink.html('<i class="bi bi-chevron-down" id="search-arrow"></i> Hide advanced search');
    }
  }

  function updateCarouselHref(element) {
    var searchWell = $('#search-well');
    var isSearchWellVisible = searchWell.is(':visible');

    if (isSearchWellVisible) {
      // Use full href with all existing parameters
      element.href = element.getAttribute('data-full-href');
    } else {
      // Use carousel-only href without search parameters
      element.href = element.getAttribute('data-carousel-only-href');
    }

    return true; // Allow the link to proceed
  }

  // Preserve all query parameters if search well is visible
  $(function() {
    var searchWell = $('#search-well');
    var form = $('#local-group-form').last();

    if (searchWell.length && searchWell.is(':visible')) {
      var urlParams = new URLSearchParams(window.location.search);
      urlParams.forEach(function(value, key) {
        // Skip parameters that are already handled by the form
        if (key !== 'minimal' && key !== 'carousel_ids[]' && key !== 'near') {
          form.append('<input type="hidden" name="' + key + '" value="' + value + '">');
        }
      });
    }
  });
</script>

<div class="mb-3 text-center <%= 'mt-3' if params[:minimal] %>">
  <% @organisation.carousels.and(button: true).order('o asc').each do |carousel| %>
    <%
      current_carousel_ids = params[:carousel_ids] || []
      if current_carousel_ids.include?(carousel.id.to_s)
        # Remove this carousel from the list
        new_carousel_ids = current_carousel_ids - [carousel.id.to_s]
      else
        # Add this carousel to the list
        new_carousel_ids = current_carousel_ids + [carousel.id.to_s]
      end
      
      # Build query string preserving other query params (not route params)
      # Parse query string manually for Sinatra
      query_params = {}
      if request.query_string
        Rack::Utils.parse_nested_query(request.query_string).each do |key, value|
          query_params[key] = value unless key == 'carousel_ids'
        end
      end
      
      # Build the href manually to handle multiple carousel_ids[] properly
      param_strings = []
      query_params.each do |key, value|
        param_strings << "#{key}=#{CGI.escape(value.to_s)}" if value.present?
      end
      new_carousel_ids.each { |id| param_strings << "carousel_ids[]=#{CGI.escape(id)}" }
      
      base_href = param_strings.any? ? "?#{param_strings.join('&')}" : "?"
      
      # Build carousel-only href but preserve minimal and near params
      carousel_only_params = []
      %w[minimal near].each do |param|
        carousel_only_params << "#{param}=#{CGI.escape(query_params[param].to_s)}" if query_params[param].present?
      end
      new_carousel_ids.each { |id| carousel_only_params << "carousel_ids[]=#{CGI.escape(id)}" }
      carousel_only_href = carousel_only_params.any? ? "?#{carousel_only_params.join('&')}" : "?"
    %>
    <a href="<%= base_href %>" 
         data-full-href="<%= base_href %>" 
         data-carousel-only-href="<%= carousel_only_href %>"
         onclick="updateCarouselHref(this)"
         class="mb-1 btn <%= params[:carousel_ids] && params[:carousel_ids].include?(carousel.id.to_s) ? 'btn-primary' : 'btn-outline-primary' %>">
      <%= carousel.name %>
    </a>
  <% end %>
</div>

<% if (local_groups = @organisation.local_groups.order('name asc').and(:id.in => [params[:local_group_id]].compact + Event.and(:id.in => @future_and_current_event_ids).pluck(:local_group_id))).exists? %>
  <div class="text-center">
    <% form_tag '', method: 'get', class: 'submitOnChange mb-3', id: 'local-group-form' do %>
      <%= hidden_field_tag :minimal, value: params[:minimal] %>
      <% if params[:carousel_ids] %>
        <% params[:carousel_ids].each do |carousel_id| %>
          <%= hidden_field_tag :'carousel_ids[]', value: carousel_id %>
        <% end %>
      <% end %>
      <% local_group_options = local_groups.order('name asc').map { |local_group| [local_group.name, "#{local_group.name}#{@organisation.near_select_suffix}"] } %>
      <%= select_tag :near, options: ([
          ['Location', '', {disabled: true, selected: params[:near].blank?}],
          ['Anywhere',''],
          ['Online', 'online'],
          ([params[:near].split(',').first, params[:near]] if params[:near] && params[:near] != 'online' &&!local_group_options.map(&:last).include?(params[:near]))
        ].compact + local_group_options).uniq,
        selected: params[:near], class: 'form-control d-inline-block', style: 'width: auto' %>
    <% end %>
  </div>
<% end %>

<div class="text-right">
  <a href="javascript:;" id="toggle-search" onclick="toggleAdvancedSearch()">
    <i class="bi <%= params[:search] ? 'bi-chevron-down' : 'bi-chevron-right' %>" id="search-arrow"></i>
    <%= params[:search] ? 'Hide advanced search' : 'Show advanced search' %>
  </a>
</div>