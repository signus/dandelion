<% {
     'cytoscape/3.9.4' => 'cytoscape.min.js',
     'chroma-js/2.0.6' => 'chroma.min.js'
   }.each { |k,v| %>
<% v.split(' ').each { |f| u = "https://cdnjs.cloudflare.com/ajax/libs/#{k}/#{f}" %>
<script src="<%= u %>"></script>
<% } %>
<% } %>

<% [
     '//rawcdn.githack.com/tgdwyer/WebCola/aab7e61cd9580c4c89180cc0a30594e12743a242/WebCola/cola.min.js',
     '//rawcdn.githack.com/cytoscape/cytoscape.js-cola/8c78f9d5c11ff6162b7d902f0639e1f787277b9f/cytoscape-cola.js'
   ].each { |f| %>
<script src="<%= f %>"></script>
<% } %>

<script>
  function drawNetwork() {

  scale = chroma.scale(['#00B963', '#00B963']);

  node_min_width = 0
  node_min_color = 0
  node_color_scale = 1
  edge_min_color = 0
  edge_color_scale = 1
  edge_min_opacity = 0.25
  edge_opacity_scale = 100

          cy = cytoscape({

          container: $('#cy'),
                  elements: [
  <% organisation_edges = OrganisationEdge.and(:mutual_followers.gte => Padrino.env == :development ? 1 : 10) %>
  <% Organisation.and(:id.in => organisation_edges.pluck(:source_id) + organisation_edges.pluck(:sink_id)).each { |organisation| %>
                    {
                      data: {
                        id: '<%= organisation.id %>',
                        slug: '<%= organisation.slug %>',
                        name: <%== CGI.unescapeHTML(Sanitize.fragment(organisation.name)).to_json %>,
                        weight: <%= organisation.followers_count %>,
                        width: (node_min_width + <%= w %>),
                        color: scale(node_min_color + <%= w %>/node_color_scale).hex()
                      }
                    },
                    <% organisation_edges.and(:source => organisation).each { |edge| %>
                    {
                      data: {
                        id: '<%= edge.id %>',
                        source: '<%= edge.source.id %>',
                        target: '<%= edge.sink.id %>',
                        weight: <%= w = edge.mutual_followers %>,
                        color: scale(edge_min_color + <%= w %>/edge_color_scale).hex(),
                        opacity: (edge_min_opacity + <%= w %>/edge_opacity_scale)
                      }
                    },
                    <% } %>
  <% } %>
                  ],
                  style: [
                  {
                  selector: 'node',
                  style: {
                      'color': '#212529',
                      'background-color': 'data(color)',
                      'opacity': 0.85,
                      'label': 'data(name)',
                      'width': 'data(width)',
                      'height': 'data(width)'
                    }
                  },
                  {
                  selector: 'edge',
                  style: {
                      'opacity': 'data(opacity)',
                      'line-color': 'data(color)',
                    }
                  }
                  ],
                  layout: {
                    name: 'cola',
                    //randomize: true,
                    //infinite: true,
                    nodeSpacing: function(node){ return 40; },
                  }

          });
  //cy.$('[weight < 2]').hide()
  cy.minZoom(0.5)
  cy.on('tap', 'node', function(){
   window.location.href = '/o/' + this.data('slug');
  });
  }

  $(function() {
  drawNetwork()
          $(window).one('focus', function() { drawNetwork() })
  })
</script>
<div id="cy" style="height: 600px"></div>