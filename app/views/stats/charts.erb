<h2>Events</h2>

<%= partial :chart, locals: { countable: Event.all, months_ago: 24 } %>

<h2>Active organisations</h2>

<%=

d = [Date.new(24.months.ago.year, 24.months.ago.month, 1)]
d << (d.last + 1.month) while d.last < Date.new(Date.today.year, Date.today.month, 1)

partial :chart, locals: {
  data: d.map { |x|
    orders = Order.and(:created_at.gte => x, :created_at.lt => x + 1.month, :value.ne => nil)
    organisations = Organisation.and(:id.in => Event.and(:id.in => orders.pluck(:event_id)).pluck(:organisation_id))
    ["#{Date::MONTHNAMES[x.month]} #{x.year}", organisations.count]
  }.to_h   
} %>

<h2>Dominance of leading organisation</h2>

<%=

d = [Date.new(24.months.ago.year, 24.months.ago.month, 1)]
d << (d.last + 1.month) while d.last < Date.new(Date.today.year, Date.today.month, 1)

partial :chart, locals: {
  unit_after: '%',
  data: d.map { |x|

    lead_org_events_in_month = Event.and(organisation: Organisation.find_by(slug: ENV['LEAD_ORG_SLUG'])).and(:created_at.gte => x, :created_at.lt => x + 1.month).count
    other_events_in_month = Event.and(:organisation.ne => Organisation.find_by(slug: ENV['LEAD_ORG_SLUG'])).and(:created_at.gte => x, :created_at.lt => x + 1.month).count

    ["#{Date::MONTHNAMES[x.month]} #{x.year}", (lead_org_events_in_month == 0 || other_events_in_month == 0) ? 0 : (100*(lead_org_events_in_month.to_f/other_events_in_month)).round]
  }.to_h
}
%>

<h2>Contributions</h2>

<%= 

d = [Date.new(24.months.ago.year, 24.months.ago.month, 1)]
d << (d.last + 1.month) while d.last < Date.new(Date.today.year, Date.today.month, 1)

partial :chart, locals: {
  unit: 'Â£',
  data: d.map { |x|

    Stripe.api_key = ENV['STRIPE_SK']
    Stripe.api_version = '2020-08-27'    

    start_of_month = x
    end_of_month = x + 1.month

    charges_list = Stripe::Charge.list({
      created: {
        gte: start_of_month.to_time.to_i,
        lt: end_of_month.to_time.to_i        
      },
      status: 'succeeded'
    })

    charges = []
    charges_list.auto_paging_each do |charge|
      charges << charge
    end    

    monthly_contributions = Money.new(0,'GBP')
    charges.each { |c| next unless c.status == 'succeeded'; next if c.refunded; monthly_contributions += Money.new(c['amount'], c['currency']) }
    monthly_contributions = monthly_contributions.exchange_to('GBP')       

    ["#{Date::MONTHNAMES[x.month]} #{x.year}", monthly_contributions.to_i]
  }.to_h
} %>

<h2>Accounts</h2>

<%= partial :chart, locals: { countable: Account.all, months_ago: 24 } %>
